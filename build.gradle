buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
	}
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'

ext.mcVersion = "1.10.2"
ext.forgeVersion = "12.18.1.2076"
ext.forgeMappings = "snapshot_20160518"
ext.url = "https://github.com/nallar/NoMoreLogSpam"
group = "me.nallar.nomorelogspam"
archivesBaseName = project.name
description = "Removes console spam"

def calculateVersion() {
	def ver = project.mcVersion
	if (System.env.BUILD_NUMBER != null)
		return ver + "-jenkins." + System.env.BUILD_NUMBER
	if (project.hasProperty("release"))
		return ver + '-' + project.release
	return ver + "-dev"
}

version = calculateVersion()

repositories {
	maven { url = 'https://repo.nallar.me/' }
}

configurations {
	bundledLibs
	compile { extendsFrom bundledLibs }
}

dependencies {
	bundledLibs "me.nallar:ModPatcher:$mcVersion-SNAPSHOT:api"
	compile 'org.projectlombok:lombok:1.16.12'
}

tasks.withType(JavaCompile) {
	sourceCompatibility = 8
	targetCompatibility = 8
	options.with {
		encoding = 'UTF-8'
		compilerArgs << "-Xlint:all" << '-Xlint:-path' << '-Xlint:-processing' << '-Xlint:-rawtypes' << '-Xlint:-serial'
	}
}

minecraft {
	version = "${project.mcVersion}-${project.forgeVersion}"
	runDir = "run"
	mappings = project.forgeMappings

	replace "@MOD_ID@", project.name.toLowerCase()
	replace "@MOD_VERSION@", project.version
	replace "@MC_VERSION@", mcVersion
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	filesMatching("mcmod.info") {
		expand 'version': project.version, 'mcversion': mcVersion, 'name': project.name, 'modid': project.name.toLowerCase(), 'description': project.description, 'url': url
	}
}

jar {
	from(configurations.bundledLibs.collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude "META-INF/**"
	}

	manifest.mainAttributes("FMLCorePlugin": "me.nallar.nomorelogspam.CoreMod")
}

wrapper {
	gradleVersion = "3.3"
	def jvmOpts = "-Xmx2G"
	inputs.property("jvmOpts", jvmOpts)
	doLast {
		def optsEnvVar = "DEFAULT_JVM_OPTS"
		scriptFile.write scriptFile.text.replace("$optsEnvVar=\"\"", "$optsEnvVar=\"$jvmOpts\"")
		batchScript.write batchScript.text.replace("set $optsEnvVar=", "set $optsEnvVar=$jvmOpts")
	}
}
